/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.AutosController;
import controlador.ClientesController;
import controlador.MarcasController;
import controlador.ModeloController;
import controlador.SalesController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Brand;
import modelo.Cars;
import modelo.Customer;
import modelo.Model;
import modelo.Sale;
import java.util.Date;

/**
 *
 * @author jibsa
 */
public final class frmNuevaVenta extends javax.swing.JFrame {

    /**
     * Creates new form frmVentas
     */
    
    AutosController controllerAuto;
    ModeloController controllerModel;
    MarcasController controllerBrand;
    ClientesController controllerCustomer;
    SalesController controllerSale;
    int idEmployee;
    
    public frmNuevaVenta(int idEmployee) {
        initComponents();
        controllerAuto = new AutosController();
        controllerModel = new ModeloController();
        controllerBrand = new MarcasController();
        controllerCustomer = new ClientesController();
        controllerSale = new SalesController();
        cargarDatos();
        setupComboListener();
        comboMarcaAutos();
        comboCliente();
        this.idEmployee = idEmployee;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNumSerie = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAutos = new javax.swing.JTable();
        lblModelo = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        cboMarca = new javax.swing.JComboBox<>();
        cboModelo = new javax.swing.JComboBox<>();
        txtAnio = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAutosComprados = new javax.swing.JTable();
        btnAtras = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        cboCliente = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        Empleado = new javax.swing.JLabel();
        btnMostrarTodo = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/numero-de-serie (3).png"))); // NOI18N
        jLabel1.setText("Num. Serie");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/auto (4).png"))); // NOI18N
        jLabel3.setText("Marca");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/ventana-trasera (1).png"))); // NOI18N
        jLabel4.setText("Modelo");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/calendario (1).png"))); // NOI18N
        jLabel5.setText("Año");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/etiqueta-del-precio (1).png"))); // NOI18N
        jLabel6.setText("Precio");

        tableAutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "# SERIE", "MODELO", "MARCA", "AÑO", "PRECIO", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAutos);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/lupa (1).png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/carro-nuevo.png"))); // NOI18N
        jLabel7.setText("Autos a comprar");

        tableAutosComprados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num. Serie", "Marca", "Modelo", "año", "precio", "color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAutosComprados);

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/volver (2).png"))); // NOI18N
        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel8.setText("total");

        lblTotal.setText("0.00");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/agregar.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/circulo-de-color.png"))); // NOI18N
        jLabel10.setText("Color");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/eliminar (1).png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnComprar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/metodo-de-pago.png"))); // NOI18N
        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        cboCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClienteActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/cliente.png"))); // NOI18N
        jLabel9.setText("Cliente");

        btnMostrarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/escoba.png"))); // NOI18N
        btnMostrarTodo.setText("Limpiar Todo");
        btnMostrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtras)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(lblModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(cboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(cboModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnMostrarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(129, 129, 129))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(68, 68, 68)))
                            .addGap(16, 16, 16)
                            .addComponent(Empleado)
                            .addGap(48, 48, 48)
                            .addComponent(btnComprar)
                            .addGap(59, 59, 59)
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(lblTotal)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminar))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregar))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 941, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10)
                            .addComponent(btnBuscar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNumSerie)
                                    .addComponent(cboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnMostrarTodo)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblTotal)
                            .addComponent(btnComprar))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(Empleado))
                            .addGap(18, 18, 18)
                            .addComponent(cboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addComponent(btnAtras)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
       public void comboMarcaAutos(){
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            List<Brand> brands = controllerBrand.getAllBrands();
            for(Brand brand: brands){
                modelo.addElement(brand);
            }
            cboMarca.setModel(modelo);
        }

     
    private void comboModeloAutos(int brandId){
     DefaultComboBoxModel modelo = new DefaultComboBoxModel();
          modelo.addElement("Todos");
     List<Model> models = controllerModel.getModelsByBrand(brandId);
     for(Model model: models){
         modelo.addElement(model);
     }
    
     cboModelo.setModel(modelo);        
 }
    
     private void cargarDatos() {
        List<Cars> cars = controllerAuto.getAllCarsNotSoldl();
        DefaultTableModel model = (DefaultTableModel) tableAutos.getModel();
        model.setRowCount(0);
        for (Cars car : cars) {
            model.addRow(new Object[]{car.getNum_serie(), controllerModel.getNamebyId(car.getId_model()), controllerModel.getNameBrand(car.getId_model()), car.getYear(), car.getPrice(), car.getColor()});
        }

    } 

           
          public void comboCliente(){
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            List<Customer> customers = controllerCustomer.getAllCustomers();
            for(Customer customer: customers){
                modelo.addElement(customer);
            }
            cboCliente.setModel(modelo);
        }
   
    
        private void setupComboListener() {
        cboMarca.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Brand selectedBrand = (Brand) cboMarca.getSelectedItem();
                if (selectedBrand != null) {
                    comboModeloAutos(selectedBrand.getId_brand());
                }
            }
        });
    }
   
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
            cargarDatosPorBusqueda();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
            // Obtener el modelo de la primera tabla
    DefaultTableModel modelAutos = (DefaultTableModel) tableAutos.getModel();
    // Obtener el modelo de la segunda tabla
    DefaultTableModel modelAutosComprados = (DefaultTableModel) tableAutosComprados.getModel();

    // Obtener la fila seleccionada
    int selectedRow = tableAutos.getSelectedRow();

    if (selectedRow != -1) {
        // Obtener los datos del auto seleccionado
        Object[] rowData = new Object[modelAutos.getColumnCount()];
        for (int i = 0; i < modelAutos.getColumnCount(); i++) {
            rowData[i] = modelAutos.getValueAt(selectedRow, i);
        }

        // Agregar los datos a la segunda tabla
        modelAutosComprados.addRow(rowData);

        // Eliminar los datos de la primera tabla
        modelAutos.removeRow(selectedRow);

        // Actualizar el total
        actualizarTotal();
    } else {
        // Mostrar un mensaje si no se selecciona ninguna fila
        JOptionPane.showMessageDialog(this, "Por favor, seleccione un auto para agregar.");
    }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
            // Obtener el modelo de la tabla de autos comprados
    DefaultTableModel modelComprados = (DefaultTableModel) tableAutosComprados.getModel();
    
    // Obtener la fila seleccionada
    int selectedRow = tableAutosComprados.getSelectedRow();
    
    // Verificar que hay una fila seleccionada
    if (selectedRow >= 0) {
        // Obtener los datos del auto seleccionado
        Object[] autoData = new Object[modelComprados.getColumnCount()];
        for (int i = 0; i < modelComprados.getColumnCount(); i++) {
            autoData[i] = modelComprados.getValueAt(selectedRow, i);
        }
        
        // Eliminar el auto de la tabla de autos comprados
        modelComprados.removeRow(selectedRow);
        
        // Agregar el auto a la tabla de autos disponibles
        DefaultTableModel modelDisponibles = (DefaultTableModel) tableAutos.getModel();
        modelDisponibles.addRow(autoData);
    } else {
        // Mostrar un mensaje de error si no se ha seleccionado ningún auto
        JOptionPane.showMessageDialog(this, "Seleccione un auto para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
                                     
    // Obtener el cliente seleccionado
    Customer customer = (Customer) cboCliente.getSelectedItem();
    if (customer == null) {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione un cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Obtener la fecha actual
    Date date = new Date();
    java.sql.Date sqlDate = new java.sql.Date(date.getTime());
    
    // Crear una nueva venta
    Sale sale = new Sale(
            customer.getIdCustomer(),
            idEmployee,
            sqlDate,
            Double.parseDouble(lblTotal.getText())
    );
    
    // Crear la venta en la base de datos
    controllerSale.createSale(sale);
    
    // Obtener el modelo de la tabla de autos comprados
    DefaultTableModel model = (DefaultTableModel) tableAutosComprados.getModel();
    int rowCount = model.getRowCount();
    String numSerieCar;
    
    for (int i = 0; i < rowCount; i++) {
        numSerieCar = (String) model.getValueAt(i, 0); // Asegúrate de que el índice sea correcto
        // Marcar el auto como vendido
        controllerAuto.cambiarIsSold(numSerieCar);
        // Obtener el ID de la última venta
        int idSale = controllerSale.getLastSaleId();
        // Asignar el ID de la venta al auto
        controllerAuto.cambiarIdSale(idSale, numSerieCar);
    }
    
    // Limpiar la tabla de autos comprados
    model.setRowCount(0);
    // Cargar los datos actualizados
    cargarDatos();
    
    // Mostrar un mensaje de éxito
    JOptionPane.showMessageDialog(this, "Venta realizada con éxito.");
    }//GEN-LAST:event_btnComprarActionPerformed

    private void cboClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboClienteActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnMostrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodoActionPerformed
        // TODO add your handling code here:
        txtNumSerie.setText("");
        cboMarca.setSelectedItem(null);
        cboModelo.setSelectedItem(null);
        txtAnio.setText("");
        txtPrecio.setText("");
        txtColor.setText("");
        cargarDatos();
    }//GEN-LAST:event_btnMostrarTodoActionPerformed

    private void actualizarTotal() {
    DefaultTableModel modelAutosComprados = (DefaultTableModel) tableAutosComprados.getModel();
    double total = 0.0;
    for (int i = 0; i < modelAutosComprados.getRowCount(); i++) {
        double precio = Double.parseDouble(modelAutosComprados.getValueAt(i, 4).toString());
        total += precio;
    }
    lblTotal.setText(String.format("%.2f", total));
}
        
private void cargarDatosPorBusqueda() {
    String numSerie = txtNumSerie.getText();
    String marca = cboMarca.getSelectedItem() != null ? cboMarca.getSelectedItem().toString() : "";
    String modeloSeleccionado = cboModelo.getSelectedItem() != null ? cboModelo.getSelectedItem().toString() : "";
    String anio = txtAnio.getText();
    String precio = txtPrecio.getText();
    String color = txtColor.getText();

    List<Cars> cars = controllerAuto.getAllCarsNotSoldl();
    DefaultTableModel model = (DefaultTableModel) tableAutos.getModel();
    model.setRowCount(0);

    for (Cars car : cars) {
        boolean matches = true;
        
        if (!numSerie.isEmpty() && !car.getNum_serie().contains(numSerie)) {
            matches = false;
        }
        if (!marca.isEmpty() && !controllerModel.getNameBrand(car.getId_model()).equalsIgnoreCase(marca)) {
            matches = false;
        }
        if (!modeloSeleccionado.isEmpty() && !modeloSeleccionado.equals("Todos") && !controllerModel.getNamebyId(car.getId_model()).equalsIgnoreCase(modeloSeleccionado)) {
            matches = false;
        }
        if (!anio.isEmpty() && !String.valueOf(car.getYear()).equals(anio)) {
            matches = false;
        }
        if (!precio.isEmpty() && !String.valueOf(car.getPrice()).equals(precio)) {
            matches = false;
        }
        if (!color.isEmpty() && !car.getColor().equalsIgnoreCase(color)) {
            matches = false;
        }
        
        if (matches) {
            model.addRow(new Object[]{car.getNum_serie(), controllerModel.getNamebyId(car.getId_model()), controllerModel.getNameBrand(car.getId_model()), car.getYear(), car.getPrice(), car.getColor()});
        }
    }
}
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmNuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmNuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmNuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmNuevaVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int idEmp = 1;
                if(args.length > 0){
                    idEmp = Integer.parseInt(args[0]);
                }
                new frmNuevaVenta(idEmp).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Empleado;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMostrarTodo;
    private javax.swing.JComboBox<String> cboCliente;
    private javax.swing.JComboBox<String> cboMarca;
    private javax.swing.JComboBox<String> cboModelo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tableAutos;
    private javax.swing.JTable tableAutosComprados;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtNumSerie;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

}
